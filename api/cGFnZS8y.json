{"per_page":7,"total":7,"current":2,"data":[{"title":"链表的双指针","date":"2019-05-05T07:00:00.000Z","date_formatted":{"ll":"May 5, 2019","L":"05/05/2019","MM-DD":"05-05"},"thumbnail":"https://post-pic.nos-eastchina1.126.net/header_imgs/karsten-gohm-1556287-unsplash.jpg","excerpt":"<p>链表存在的一个最大的问题就是不支持下标索引，且只能通过遍历获取整个链表的长度。这样，在<code>array</code>中经常使用的双指针法看上去似乎很难有用武之地。但实际上，链表中也有它独特的双指针使用方法。</p>","link":"post/链表的双指针","tags":["LeetCode","Linked List"],"categories":["算法数据结构"]},{"title":"Linked List","date":"2019-05-01T07:00:00.000Z","date_formatted":{"ll":"May 1, 2019","L":"05/01/2019","MM-DD":"05-01"},"thumbnail":"https://post-pic.nos-eastchina1.126.net/Data%20Structure%20and%20Algorithm/HD_linked-list.jpeg","excerpt":"<p>LeetCode Explore <a href=\"https://leetcode.com/explore/learn/card/linked-list/210/doubly-linked-list/\" target=\"_blank\">Linked List</a>专题的搬运，主要介绍链表的概念和常见问题，概念部分夹杂一些参考书《数据结构预算法Python实现》上面的内容。</p>","link":"post/linked-list","tags":["LeetCode","Linked List"],"categories":["算法数据结构"]},{"title":"Queue and BFS","date":"2019-04-25T07:00:00.000Z","date_formatted":{"ll":"Apr 25, 2019","L":"04/25/2019","MM-DD":"04-25"},"thumbnail":"https://post-pic.nos-eastchina1.126.net/Data%20Structure%20and%20Algorithm/HD_queue.jpg","excerpt":"<p>LeetCode上面 <code>Queue &amp; Stack</code> 专题的搬运：Queue部分。（可能也有那么一点自己的理解，存疑）</p>","link":"post/Queue","tags":["BFS","LeetCode","Queue"],"categories":["算法数据结构"]},{"title":"Stack and DFS","date":"2019-04-25T07:00:00.000Z","date_formatted":{"ll":"Apr 25, 2019","L":"04/25/2019","MM-DD":"04-25"},"thumbnail":"https://post-pic.nos-eastchina1.126.net/Data%20Structure%20and%20Algorithm/HD_stack.jpeg","excerpt":"<p>LeetCode上面 <code>Queue &amp; Stack</code> 专题的搬运：Stack部分。（可能也有那么一点自己的理解，存疑）</p>","link":"post/Stack","tags":["DFS","LeetCode","Stack"],"categories":["算法数据结构"]},{"title":"Binary Tree（2）","date":"2019-04-15T07:00:00.000Z","date_formatted":{"ll":"Apr 15, 2019","L":"04/15/2019","MM-DD":"04-15"},"thumbnail":"https://post-pic.nos-eastchina1.126.net/header_imgs/alice-donovan-rouse-177313-unsplash.jpg","excerpt":"<p>这一篇post是之前Binary Tree的后续，主要记录一些Binary Tree相关的题目。其实LeetCode上有很多题是相同或者存在极大关联的，基本思想都差不多，一道解决了，其他的也就都解决了。解法的分析也尽量将递归和迭代两种方法都实现一下（当然我也只是尽量，迭代方法还真不一定看得懂）。</p>","link":"post/Tree-02","tags":["Binary Tree","LeetCode"],"categories":["算法数据结构"]},{"title":"Binary Tree（1）","date":"2019-04-05T07:00:00.000Z","date_formatted":{"ll":"Apr 5, 2019","L":"04/05/2019","MM-DD":"04-05"},"thumbnail":"https://post-pic.nos-eastchina1.126.net/header_imgs/hello-i-m-nik-1399233-unsplash.jpg","excerpt":"<p>LeetCode 上面 <a href=\"https://leetcode.com/explore/learn/card/data-structure-tree/\" target=\"_blank\">Binary Tree</a> 专题的搬运。介绍二叉树的基本概念和一些 LeetCode 相关题目。</p>","link":"post/Tree-01","tags":["Binary Tree","LeetCode"],"categories":["算法数据结构"]},{"title":"牛顿法","date":"2019-04-05T07:00:00.000Z","date_formatted":{"ll":"Apr 5, 2019","L":"04/05/2019","MM-DD":"04-05"},"thumbnail":"https://post-pic.nos-eastchina1.126.net/Mathematics/HD_blackboard.jpg","excerpt":"<p>最早听说这个方法是在知乎的一个回答里，大佬手写 sqrt(x) 没有用 binary search 而是用了牛顿法去迭代，把面试官都懵逼了。后面刷题遇到了 <a href=\"https://leetcode.com/problems/sqrtx/\" target=\"_blank\">69. Sqrt(x)</a> 和 <a href=\"https://leetcode.com/problems/valid-perfect-square/\" target=\"_blank\">367.Valid Perfect Square</a>，就对这个牛顿法有了一些兴趣，本文大部分是搬运 references 中的东西。</p>","link":"post/牛顿法","tags":["Mathematics","Newton Method"],"categories":["学点数学"]}]}