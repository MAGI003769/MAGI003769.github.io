{"per_page":7,"total":7,"current":1,"data":[{"title":"强行置顶：关于这个博客 About this blog","date":"2069-01-01T08:00:00.000Z","date_formatted":{"ll":"Jan 1, 2069","L":"01/01/2069","MM-DD":"01-01"},"thumbnail":"https://post-pic.nos-eastchina1.126.net/header_imgs/home-2.jpg","excerpt":"<blockquote>\n<p><strong><em>“If you can’t explain it to a six year old, you don’t understand it yourself”</em></strong> </p>\n<p>—— Albert Einstein </p>\n</blockquote>","link":"post/关于这个博客","tags":["一些想法"],"categories":["自用树洞"]},{"title":"Java线程的同步与锁","date":"2020-05-13T07:00:00.000Z","date_formatted":{"ll":"May 13, 2020","L":"05/13/2020","MM-DD":"05-13"},"excerpt":"","link":"post/Java线程的同步与锁","tags":["Java","多线程"],"categories":["Java"]},{"title":"Java多线程基础","date":"2020-05-11T07:00:00.000Z","date_formatted":{"ll":"May 11, 2020","L":"05/11/2020","MM-DD":"05-11"},"thumbnail":"https://post-pic.nos-eastchina1.126.net/header_imgs/index-bg.jpg","excerpt":"<p>多线程几乎是开发必考的问题，需要梳理一下相关的知识和概念。进程与线程的关系、从JVM的角度分析二者、并发与并行的区别、为什么要使用多线程以及使用多线程可能带来的问题。</p>","link":"post/Java多线程基础","tags":["Java","多线程"],"categories":["Java"]},{"title":"MAC上配置Hexo部署GitHub Page","date":"2020-05-10T07:00:00.000Z","date_formatted":{"ll":"May 10, 2020","L":"05/10/2020","MM-DD":"05-10"},"thumbnail":"https://post-pic.nos-eastchina1.126.net/header_imgs/sweetgun-k_pBB5wJtaU-unsplash.jpg","excerpt":"<p>前天熬过最后一场final，终于闲下来给这地方扫扫灰。这两天在MAC上配置了一些Hexo，虽然还有404页面和一些渲染的小问题，但是折腾了两天总算是能把最新的deploy到GitHub Page上了。在这写一下踩过的一些坑，顺便庆祝暑假开始，希望这个假期能多学点多写点。</p>","link":"post/MAC-hexo","tags":["Blog-Construction","Hexo"],"categories":["环境配置"]},{"title":"CS61B Week1：Java入门","date":"2019-08-01T07:00:00.000Z","date_formatted":{"ll":"Aug 1, 2019","L":"08/01/2019","MM-DD":"08-01"},"thumbnail":"https://post-pic.nos-eastchina1.126.net/Java/HD_Java%E5%85%A5%E9%97%A8.jpg","excerpt":"<h1 id=\"java基础\">Java基础<a href=\"#java基础\" title=\"Java基础\"></a></h1><p>这部分是CS61b Lecture 1 内容的总结，非常概括的介绍了 Java 的一些基础知识。我们需要了解这些有关 Java 的基本特性，才能在后面的过程中更好的学习和写 Java 代码。</p>","link":"post/CS61B_Java入门","tags":["CS61B","Java"],"categories":["Java"]},{"title":"机器学习模型——支持向量机（2）","date":"2019-07-03T07:00:00.000Z","date_formatted":{"ll":"Jul 3, 2019","L":"07/03/2019","MM-DD":"07-03"},"thumbnail":"https://post-pic.nos-eastchina1.126.net/Machine-Learning/HD_SVM_2.jpg","excerpt":"<p>上一篇关于SVM的post里面讨论了硬间隔和软间隔两种情况，而实际上SVM是可以扩展到比较极端的线性不可分情况的。本篇就接着前篇的内容，继续讨论SVM在线性不可分情况下的解决方案——引入核方法。之前关于SVM模型参数估计的方法也只有数学上的推导，这里还要介绍具体实现时要用到的SMO算法。中间的部分会穿插一些代码，解释相关步骤的实现。</p>","link":"post/支持向量机（2）","tags":["Machine Learning","SVM","李航","核方法"],"categories":["机器学习"]},{"title":"拉格朗日对偶与SVM","date":"2019-06-30T07:00:00.000Z","date_formatted":{"ll":"Jun 30, 2019","L":"06/30/2019","MM-DD":"06-30"},"thumbnail":"https://post-pic.nos-eastchina1.126.net/Mathematics/HD_lagrange_duality.png","excerpt":"<p>在SVM的推导中，我们需要在限制条件下去优化<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"7.304ex\" height=\"5.176ex\" style=\"vertical-align: -1.838ex;\" viewBox=\"0 -1437.2 3144.9 2228.5\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">\\frac{1}{2}||w||^2</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMAIN-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-7C\" d=\"M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z\"></path>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-77\" d=\"M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z\"></path>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n<g transform=\"translate(120,0)\">\n<rect stroke=\"none\" width=\"620\" height=\"60\" x=\"0\" y=\"220\"></rect>\n <use xlink:href=\"#E1-MJMAIN-31\" x=\"60\" y=\"676\"></use>\n <use xlink:href=\"#E1-MJMAIN-32\" x=\"60\" y=\"-687\"></use>\n</g>\n <use xlink:href=\"#E1-MJMAIN-7C\" x=\"860\" y=\"0\"></use>\n <use xlink:href=\"#E1-MJMAIN-7C\" x=\"1139\" y=\"0\"></use>\n <use xlink:href=\"#E1-MJMATHI-77\" x=\"1417\" y=\"0\"></use>\n <use xlink:href=\"#E1-MJMAIN-7C\" x=\"2134\" y=\"0\"></use>\n<g transform=\"translate(2412,0)\">\n <use xlink:href=\"#E1-MJMAIN-7C\" x=\"0\" y=\"0\"></use>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-32\" x=\"393\" y=\"675\"></use>\n</g>\n</g>\n</svg>，这时就需要利用拉格朗日对偶来构造一个方便计算机求解的优化问题。这篇post就介绍一下拉格朗日对偶和kkt条件等相关的概念。</p>","link":"post/拉格朗日对偶","tags":["Machine Learning","凸优化","拉格朗日对偶"],"categories":["学点数学"]}]}