{"title":"Linux命令行","date":"2018-04-02T07:00:00.000Z","date_formatted":{"ll":"Apr 2, 2018","L":"04/02/2018","MM-DD":"04-02"},"link":"post/linux命令行","tags":["Linux","remote server","terminal"],"categories":["学习笔记"],"updated":"2019-05-04T03:47:10.000Z","content":"<p>这几天总算是搞定了实验室服务器的账户，终于用上TITAN了。摆脱了一天到晚读玄学paper不知所以，开始了一脸懵逼的玄学实验胡乱调参。而在这之前需要了解掌握基本的 Linux 命令行操作，熟悉终端，才能远程控制服务器。</p>\n<a id=\"more\"></a><h1 id=\"查看当前目录\">查看当前目录<a href=\"#查看当前目录\" title=\"查看当前目录\"></a></h1><ul><li><code>pwd</code> 用与查看当前的工作路径，</li>\n<li><code>ls</code> 可以查看当前目录下的内容。</li>\n</ul><h1 id=\"文件相关\">文件相关<a href=\"#文件相关\" title=\"文件相关\"></a></h1><h2 id=\"文件上传与下载\">文件上传与下载<a href=\"#文件上传与下载\" title=\"文件上传与下载\"></a></h2><p>上传文件，使用 <code>scp</code> —— secure copy。需要使用<strong>本地</strong>的 bash，并输入如下命令。如果需要将整个文件夹都上传到服务器，可以先将整个文件压缩近一个压缩包，在进行上传。需要注意的是这里的 destination server 需要使用服务器的地址，别傻不拉几的填个服务器名上去。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ scp [<span class=\"built_in\">source</span> file] [username]@[destination server]: [destination dir]</span><br></pre></td></tr></table></figure><p>使用的一些选项：</p>\n<p><code>-p</code>: Duplicate all file attributes (permissions, timestamps) when copying.</p>\n<p><code>-r</code>: Recursively copy a directory and its contents.</p>\n<p><code>-v</code>: Produce verbose output, useful for debugging.</p>\n<p>目前的日常使用中，我个人并不经常使用这个命令。因为比较常用的 Bitvise SSH Client 集成了可以进行上传下载文件的 GUI，对我这种菜鸟比较友好。而博士生学长给下载的 Xmanager - Xshell 大概用起来没那么顺手。毕竟日常使用 windows， 也没折腾 Ubuntu 双系统，平时接触终端也就仅限于 git bash 这种了。所以，作为 Linux 终端菜鸟，还要学习一个。</p>\n<h2 id=\"文件解压缩\">文件解压缩<a href=\"#文件解压缩\" title=\"文件解压缩\"></a></h2><p>Linux支持很多不同格式的压缩文件，因此解压缩的命令就各有不同。这篇<a href=\"http://www.cnblogs.com/eoiioe/archive/2008/09/20/1294681.html\" target=\"_blank\">博客</a>就收录了常用压缩格式对应的解压命令。目前，通常使用 <code>.zip</code> 进行压缩</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ unzip [FileName.zip]</span><br></pre></td></tr></table></figure><p><code>.tar</code> 是对文件的打包而非压缩，也是比较常用的文件格式</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tar xvf FileName.tar           <span class=\"comment\"># 解包</span></span><br><span class=\"line\">$ tar cvf FileName.tar DirName   <span class=\"comment\"># 打包</span></span><br></pre></td></tr></table></figure><h1 id=\"后台运行\">后台运行<a href=\"#后台运行\" title=\"后台运行\"></a></h1><p>在当前终端运行一个脚本时，该终端会不占用而无法进行其他工作。比如在训练模型是想要查看GPU的使用情况，或者断开与远程服务器的连接但保持训练的进行。这时我们就需要借助 <a href=\"https://en.wikipedia.org/wiki/Tmux\" target=\"_blank\"><code>tmux</code></a> 这个工具。tmux 是一个终端选择器（terminal multiplexer），它可以让用户在一个终端窗口中控制多个终端。对于连接远程服务器的工作有很大的帮助。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tmux                      <span class=\"comment\"># create a new terminal session</span></span><br></pre></td></tr></table></figure><p>在创建了新的 terminal session 之后，窗口会显示新的终端界面。想要退出新的终端界面，则可以在使用 <code>ctrl+b</code> 前缀之后再按 <code>d</code> （表示detached），这样就返回最初的终端。现在可以查看一共创建过多少个 terminal session：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tmux ls                   <span class=\"comment\"># list all terminal sessions</span></span><br></pre></td></tr></table></figure><p>键入以上的命令之后就可以看到下面的一段显示</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ruihao@PremilabServer01:~$ tmux ls</span><br><span class=\"line\">0: 1 windows (created Mon Apr  2 17:19:35 2018) [100x34]</span><br><span class=\"line\">1: 1 windows (created Mon Apr  2 19:01:14 2018) [100x34]</span><br></pre></td></tr></table></figure><p>每一行就是一个 terminal session， 最前面的就是它们的索引。我们可以通过这些索引来进入我们想要的 session。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tmux attach -t 0</span><br></pre></td></tr></table></figure><p>这样就可以进入上面编号为0的 session 查看程序的执行进度或者执行其他操作。运用 <code>tmux</code> 能够保证进程在断开与服务器连接之后依然正常运行。服务器跑着模型，这别就可以直接溜了溜了，美滋滋。</p>\n<h1 id=\"gpu使用\">GPU使用<a href=\"#gpu使用\" title=\"GPU使用\"></a></h1><ul><li><code>nvidia-smi</code>  可以查看GPU使用情况</li>\n<li><code>export CUDA_VISIBLE_DEVICES=0</code> 指定可用的GPU资源，防止占用所有GPU的显存 </li>\n</ul><h1 id=\"远程查看server端的log\">远程查看server端的log<a href=\"#远程查看server端的log\" title=\"远程查看server端的log\"></a></h1><p>实验室server的框架是Tensorlow，它为我们提供了 <code>tensorboard</code> —— 一个很好的记录模型信息、训练过程并将其可视化的工具。该工具使用本地的port，并在浏览器上显示可视化的内容。然而通常情况下server端都是没有GUI的，因此我们需要一些额外的操作，才能将 tensorboard 提供的信息，在我们自己的PC上显示并查看。当然，PC和server并不一定处于同一个网络下，这里现只讨论处在同一网络下的查看方法。Github上有一段简单的<a href=\"https://github.com/JeremyCCHsu/SLAM-Tensorflow-Tutorial/blob/master/Note90-Remote-Access.md\" target=\"_blank\">教程</a>可以作为参考。首先，在server的终端上正常使用 <code>tensorboard</code> 的命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tensorboard --<span class=\"built_in\">log</span> path_to_log_files</span><br></pre></td></tr></table></figure><p>然后在本地的浏览器中输入server的地址再加上port的编号即可。</p>\n<h1 id=\"reference\">Reference<a href=\"#reference\" title=\"Reference\"></a></h1><ul><li><a href=\"https://blog.csdn.net/sallyxyl1993/article/details/62220424\" target=\"_blank\">nvidia-smi 命令解读</a></li>\n<li><a href=\"https://blog.csdn.net/liujianfei526/article/details/50605813\" target=\"_blank\">The Linux Process Principle, PID、PGID、PPID、SID、TID、TTY</a></li>\n<li><a href=\"https://www.cyberciti.biz/faq/show-all-running-processes-in-linux/\" target=\"_blank\">Show All Running Processes in Linux</a></li>\n<li><a href=\"https://stackoverflow.com/questions/39649102/how-do-i-select-which-gpu-to-run-a-job-on\" target=\"_blank\">stackoverflow - select GPU to use</a></li>\n<li><a href=\"http://atkinsam.com/documents/tmux.pdf\" target=\"_blank\">tmux cheat sheet</a></li>\n<li><a href=\"https://www.ocf.berkeley.edu/~ckuehl/tmux/\" target=\"_blank\">tmux - a very simple beginner’s guide</a></li>\n</ul>","prev":{"title":"DCT——离散余弦变换","link":"post/DCT"},"next":{"title":"Latex 代码高亮问题","link":"post/latex代码高亮"},"plink":"https://magi003769.github.io/post/linux命令行/","toc":[{"id":"查看当前目录","title":"查看当前目录","index":"1"},{"id":"文件相关","title":"文件相关","index":"2","children":[{"id":"文件上传与下载","title":"文件上传与下载","index":"2.1"},{"id":"文件解压缩","title":"文件解压缩","index":"2.2"}]},{"id":"后台运行","title":"后台运行","index":"3"},{"id":"gpu使用","title":"GPU使用","index":"4"},{"id":"远程查看server端的log","title":"远程查看server端的log","index":"5"},{"id":"reference","title":"Reference","index":"6"}]}